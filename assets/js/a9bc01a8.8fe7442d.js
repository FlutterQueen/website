"use strict";(self.webpackChunkqueen=self.webpackChunkqueen||[]).push([[58],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),f=a,v=p["".concat(u,".").concat(f)]||p[f]||c[f]||i;return n?r.createElement(v,o(o({ref:t},d),{},{components:n})):r.createElement(v,o({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6793:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={title:"validation",sidebar_position:2},u="variable validation",s={unversionedId:"validation",id:"validation",title:"validation",description:"use a function to validate any variable and it will return a bool based on the input",source:"@site/docs/validation.md",sourceDirName:".",slug:"/validation",permalink:"/website/docs/validation",editUrl:"https://github.com/FlutterQueen/website/tree/master/docs/validation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"validation",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"localization",permalink:"/website/docs/localization"},next:{title:"themes",permalink:"/website/docs/themes"}},d=[{value:"list of available functions",id:"list-of-available-functions",children:[],level:2},{value:"Validate Forms",id:"validate-forms",children:[],level:2},{value:"list of available Rules",id:"list-of-available-rules",children:[],level:2},{value:"Localize the rule error message",id:"localize-the-rule-error-message",children:[{value:"override the error message",id:"override-the-error-message",children:[],level:3}],level:2}],c={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"variable-validation"},"variable validation"),(0,i.kt)("p",null,"use a function to validate any variable and it will return a ",(0,i.kt)("inlineCode",{parentName:"p"},"bool")," based on the input"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"const badEmail = 'QueenRoyal.kingdom';\nprint(isEmail(badEmail)) // false\n\nconst validEmail = 'Queen@Royal.kingdom';\nprint(isEmail(validEmail)) // true\n\n")),(0,i.kt)("h2",{id:"list-of-available-functions"},(0,i.kt)("a",{parentName:"h2",href:"https://pub.dev/documentation/queen_validators/latest/queen_validators/queen_validators-library.html#functions"},"list of available functions")),(0,i.kt)("h1",{id:"form-validation"},"Form validation"),(0,i.kt)("p",null,"just like the flutter says to do with forms queen do it in the same way just take the burden of the validation logic from you"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"create a from , add the fields , set the roles and you are done")),(0,i.kt)("h2",{id:"validate-forms"},"Validate Forms"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},'@override\nWidget build(BuildContext context) {\nreturn TextFormField(\n     // use qValidator function and provider list of rules to apply on this field\n    validator: qValidator([\n      IsRequired(),\n      IsOptional()\n      IsEmail(),\n      MinLength(8),\n      MaxLength(30, "optionally you can override the failure if the validation fails"),\n    ]),\n  );\n  }\n')),(0,i.kt)("h2",{id:"list-of-available-rules"},(0,i.kt)("a",{parentName:"h2",href:"https://pub.dev/documentation/queen_validators/latest/queen_validators/queen_validators-library.html#classes"},"list of available Rules")),(0,i.kt)("h2",{id:"localize-the-rule-error-message"},"Localize the rule error message"),(0,i.kt)("p",null,"its localized out of the box"),(0,i.kt)("h3",{id:"override-the-error-message"},"override the error message"),(0,i.kt)("p",null,"copy the key and override it in any language you want under the package name 'validation'"))}p.isMDXComponent=!0}}]);
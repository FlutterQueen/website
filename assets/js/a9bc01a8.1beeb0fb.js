"use strict";(self.webpackChunkqueen=self.webpackChunkqueen||[]).push([[58],{6793:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return r},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return d},default:function(){return v}});var i=t(7462),l=t(3366),o=(t(7294),t(3905)),n=["components"],r={title:"validation",sidebar_position:2},s=void 0,u={unversionedId:"validation",id:"validation",isDocsHomePage:!1,title:"validation",description:"- variable validation",source:"@site/docs/validation.md",sourceDirName:".",slug:"/validation",permalink:"/docs/validation",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/validation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"validation",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"localization",permalink:"/docs/localization"}},d=[{value:"list of available functions",id:"list-of-available-functions",children:[],level:2},{value:"Validate Forms",id:"validate-forms",children:[],level:2},{value:"list of available Rules",id:"list-of-available-rules",children:[],level:2},{value:"Localize the rule error message",id:"localize-the-rule-error-message",children:[{value:"its localized out of the box if you are using nations",id:"its-localized-out-of-the-box-if-you-are-using-nations",children:[],level:3},{value:"override the error message",id:"override-the-error-message",children:[],level:3}],level:2}],m={toc:d};function v(e){var a=e.components,t=(0,l.Z)(e,n);return(0,o.kt)("wrapper",(0,i.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#variable-validation"},"variable validation"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#list-of-available-functions"},"list of available functions")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#form-validation"},"Form validation"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#validate-forms"},"Validate Forms")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#list-of-available-rules"},"list of available Rules")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#localize-the-rule-error-message"},"Localize the rule error message"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#its-localized-out-of-the-box-if-you-are-using-nations"},"its localized out of the box if you are using nations")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#override-the-error-message"},"override the error message")))))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#notes"},"notes"))),(0,o.kt)("h1",{id:"variable-validation"},"variable validation"),(0,o.kt)("p",null,"use a function to validate any variable and it will return a ",(0,o.kt)("inlineCode",{parentName:"p"},"bool")," based on the input"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"const badEmail = 'QueenRoyal.kingdom';\nprint(isEmail(badEmail)) // false\n\nconst validEmail = 'Queen@Royal.kingdom';\nprint(isEmail(validEmail)) // true\n\n")),(0,o.kt)("h2",{id:"list-of-available-functions"},(0,o.kt)("a",{parentName:"h2",href:"https://pub.dev/documentation/queen_validators/latest/queen_validators/queen_validators-library.html#functions"},"list of available functions")),(0,o.kt)("h1",{id:"form-validation"},"Form validation"),(0,o.kt)("p",null,"just like the flutter says to do with forms queen do it in the same way just take the burden of the validation logic from you"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"create a from , add the fields , set the roles and you are done")),(0,o.kt)("h2",{id:"validate-forms"},"Validate Forms"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'@override\nWidget build(BuildContext context) {\nreturn TextFormField(\n     // use qValidator function and provider list of rules to apply on this field\n    validator: qValidator([\n      IsRequired(),\n      IsOptional()\n      IsEmail(),\n      MinLength(8),\n      MaxLength(30, "optionally you can override the failure if the validation fails"),\n    ]),\n  );\n  }\n')),(0,o.kt)("h2",{id:"list-of-available-rules"},(0,o.kt)("a",{parentName:"h2",href:"https://pub.dev/documentation/queen_validators/latest/queen_validators/queen_validators-library.html#classes"},"list of available Rules")),(0,o.kt)("h2",{id:"localize-the-rule-error-message"},"Localize the rule error message"),(0,o.kt)("h3",{id:"its-localized-out-of-the-box-if-you-are-using-nations"},"its localized out of the box if you are using nations"),(0,o.kt)("h3",{id:"override-the-error-message"},"override the error message"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"the recommended way to do so is by overriding the rule key in your ",(0,o.kt)("inlineCode",{parentName:"li"},"assets/lang")," folder"),(0,o.kt)("li",{parentName:"ul"},"or by extending the rule and override the key to whatever you want")),(0,o.kt)("h1",{id:"notes"},"notes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"some rules takes the failure message as optional param like ",(0,o.kt)("inlineCode",{parentName:"li"},"IsDateMilli")),(0,o.kt)("li",{parentName:"ul"},"almost 99% of the rules has a function to validate the variables and have a rules for forms")))}v.isMDXComponent=!0}}]);